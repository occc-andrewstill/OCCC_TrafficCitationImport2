<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog" />
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  </configSections>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.6.1" />
  </startup>
  <connectionStrings>
    <add name="OdyClerkInternalEntities" connectionString="metadata=res://*/CitationModel.csdl|res://*/CitationModel.ssdl|res://*/CitationModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=LSNODYTEST\FLORANGETEST;initial catalog=OdyClerkInternal;integrated security=True;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
    <add name="ReferenceEntities" connectionString="metadata=res://*/CitationModel.csdl|res://*/CitationModel.ssdl|res://*/CitationModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=LSNODYTEST\FLORANGETEST;initial catalog=OdyClerkInternal;integrated security=True;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
    <add name="Schedule" connectionString="Data Source=LSNODYTEST\FLORANGETEST;Initial Catalog=OdyClerkInternal;Integrated Security=True;Persist Security Info=True" providerName="System.Data.SqlClient" />
    <add name="NLog" connectionString="Data Source=LSNODYTEST\FLORANGETEST;Initial Catalog=OdyClerkInternal;Integrated Security=True;Persist Security Info=True" providerName="System.Data.SqlClient" />
  </connectionStrings>
  <nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" internalLogFile="" internalLogLevel="Error" throwexceptions="false">
    <targets>
      <!-- This target will write to a file -->
      <!-- The layout is pipe delimited so that the file can be imported into Excel -->
      <!--Note: E:\LogFiles\TrafficCitationImport_v2 maps to \\CWTMAPP01\LogFiles$\TrafficCitationImport_v2-->
      <target name="file" xsi:type="File" fileName="\\CWTMAPP01\LogFiles$\TrafficCitationImport_v2\${shortdate}.log" layout="${longdate}|${uppercase:${level}}|${callsite}|${message}|${exception:format=tostring}" archiveFileName="logs/archives/${shortdate}.txt" archiveEvery="Day" archiveNumbering="Rolling" maxArchiveFiles="45" />
      <target name="db" xsi:type="Database" connectionStringName="NLog" commandText="exec dbo.OCCC_NLog_AddEntry @application, @machineName, @logged, @level, @message, @logger,  @properties, @callsite, @exception">
        <parameter name="@application" layout="OCCC_TrafficCitationImport_v2" />
        <parameter name="@machineName" layout="${machinename}" />
        <parameter name="@logged" layout="${date}" />
        <parameter name="@level" layout="${level}" />
        <parameter name="@message" layout="${message}" />
        <parameter name="@logger" layout="${logger}" />
        <parameter name="@properties" layout="${all-event-properties:separator=|}" />
        <parameter name="@callsite" layout="${callsite}" />
        <parameter name="@exception" layout="${exception:tostring}" />
      </target>
    </targets>
    <rules>
      <!--<logger name="*" minlevel="Debug" writeTo="console" />-->
      <!--<logger name="*" minlevel="Error" writeTo="database" />-->
      <!--<logger name="*" minlevel="Debug" writeTo="csv" />-->
      <!--<logger name="*" minlevel="Info" writeTo="database" />-->
      <logger name="*" minlevel="Debug" writeTo="db" />
      <!--<logger levels="Error,Warn,Fatal" name="databaseLogger" writeTo="database"/>-->
    </rules>
  </nlog>
  <appSettings>
    <add key="RunAsConsoleApp" value="No" />
    <add key="archiveFilePath" value="\\cwtseaa01\CitationImportTest\Archive" />
    <add key="RetryTime" value="4000" />
    <add key="testing" value="true" />
    <!--
		App Type sets how the service will run
		Console: The app will run as a console application, intended for the developer to use to develop and test business logic
		Service: The app will run as a service, intended when the application has been deployed to a server
		-->
    <add key="AppType" value="Service" />
    <!--
		TimerInterval is the time is milliseconds that the service will be asleep before it wakes up and checks to see if the TaskManager Run method is to be run
		-->
    <add key="TimerInterval" value="60000" />
    <!--
		RunInterval is the time is minutes betweeneach Run method. 
		If the service Run method was to run every hour then this would be 60
		-->
    <!--Run every day-->
    <!--<add key="RunIntervalMinutes" value="1440"/>-->
    <!--Run every 4 hours-->
    <!--<add key="RunIntervalMinutes" value="240"/>-->
    <!--Run every hour-->
    <add key="RunIntervalMinutes" value="60" />
    <!--Run every minute-->
    <!--<add key="RunIntervalMinutes" value="3"/>-->
    <add key="InitialRunTime" value="9/14/2020 10:45 AM" />
    <add key="ServiceCode" value="TCI2" />
    <add key="CustomTimer" value="False" />
    <!--The number of days after which we archive the citation image-->
    <add key="DaysToArchiveImage" value="-15" />
    <add key="dataFile" value="\\\\cwtmapp01\\facc\\facc\\traffic\\tcats\\in\\hold" />
  </appSettings>
  <entityFramework>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
</configuration>